// Mocks generated by Mockito 5.4.4 from annotations
// in jisu_fund_analyzer/test/features/fund/performance/filter_performance_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/fund.dart'
    as _i6;
import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/fund_filter_criteria.dart'
    as _i8;
import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/fund_ranking.dart'
    as _i2;
import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/fund_search_criteria.dart'
    as _i9;
import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/hot_ranking_type.dart'
    as _i7;
import 'package:jisu_fund_analyzer/src/features/fund/domain/entities/ranking_statistics.dart'
    as _i3;
import 'package:jisu_fund_analyzer/src/features/fund/domain/repositories/fund_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaginatedRankingResult_0 extends _i1.SmartFake
    implements _i2.PaginatedRankingResult {
  _FakePaginatedRankingResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRankingStatistics_1 extends _i1.SmartFake
    implements _i3.RankingStatistics {
  _FakeRankingStatistics_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FundRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFundRepository extends _i1.Mock implements _i4.FundRepository {
  MockFundRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.Fund>> getFundList() => (super.noSuchMethod(
        Invocation.method(
          #getFundList,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Fund>>.value(<_i6.Fund>[]),
      ) as _i5.Future<List<_i6.Fund>>);

  @override
  _i5.Future<List<_i6.Fund>> getFunds() => (super.noSuchMethod(
        Invocation.method(
          #getFunds,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Fund>>.value(<_i6.Fund>[]),
      ) as _i5.Future<List<_i6.Fund>>);

  @override
  _i5.Future<List<_i6.Fund>> getFundRankings(String? symbol) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFundRankings,
          [symbol],
        ),
        returnValue: _i5.Future<List<_i6.Fund>>.value(<_i6.Fund>[]),
      ) as _i5.Future<List<_i6.Fund>>);

  @override
  _i5.Future<_i2.PaginatedRankingResult> getFundRankingsByCriteria(
    _i2.RankingCriteria? criteria, {
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFundRankingsByCriteria,
          [criteria],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i5.Future<_i2.PaginatedRankingResult>.value(
            _FakePaginatedRankingResult_0(
          this,
          Invocation.method(
            #getFundRankingsByCriteria,
            [criteria],
            {#forceRefresh: forceRefresh},
          ),
        )),
      ) as _i5.Future<_i2.PaginatedRankingResult>);

  @override
  _i5.Future<List<_i2.FundRanking>> getFundRankingHistory(
    String? fundCode,
    _i2.RankingPeriod? period, {
    int? days = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFundRankingHistory,
          [
            fundCode,
            period,
          ],
          {#days: days},
        ),
        returnValue:
            _i5.Future<List<_i2.FundRanking>>.value(<_i2.FundRanking>[]),
      ) as _i5.Future<List<_i2.FundRanking>>);

  @override
  _i5.Future<_i2.PaginatedRankingResult> searchRankings(
    String? query,
    _i2.RankingCriteria? criteria,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRankings,
          [
            query,
            criteria,
          ],
        ),
        returnValue: _i5.Future<_i2.PaginatedRankingResult>.value(
            _FakePaginatedRankingResult_0(
          this,
          Invocation.method(
            #searchRankings,
            [
              query,
              criteria,
            ],
          ),
        )),
      ) as _i5.Future<_i2.PaginatedRankingResult>);

  @override
  _i5.Future<_i3.RankingStatistics> getRankingStatistics(
          _i2.RankingCriteria? criteria) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRankingStatistics,
          [criteria],
        ),
        returnValue:
            _i5.Future<_i3.RankingStatistics>.value(_FakeRankingStatistics_1(
          this,
          Invocation.method(
            #getRankingStatistics,
            [criteria],
          ),
        )),
      ) as _i5.Future<_i3.RankingStatistics>);

  @override
  _i5.Future<_i2.PaginatedRankingResult> getFavoriteFundsRankings(
    List<String>? fundCodes,
    _i2.RankingCriteria? criteria,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoriteFundsRankings,
          [
            fundCodes,
            criteria,
          ],
        ),
        returnValue: _i5.Future<_i2.PaginatedRankingResult>.value(
            _FakePaginatedRankingResult_0(
          this,
          Invocation.method(
            #getFavoriteFundsRankings,
            [
              fundCodes,
              criteria,
            ],
          ),
        )),
      ) as _i5.Future<_i2.PaginatedRankingResult>);

  @override
  _i5.Future<bool> saveFavoriteFunds(Set<String>? fundCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavoriteFunds,
          [fundCodes],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<Set<String>> getFavoriteFunds() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteFunds,
          [],
        ),
        returnValue: _i5.Future<Set<String>>.value(<String>{}),
      ) as _i5.Future<Set<String>>);

  @override
  _i5.Future<List<_i7.HotRankingType>> getHotRankingTypes() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHotRankingTypes,
          [],
        ),
        returnValue:
            _i5.Future<List<_i7.HotRankingType>>.value(<_i7.HotRankingType>[]),
      ) as _i5.Future<List<_i7.HotRankingType>>);

  @override
  _i5.Future<List<String>> getFundTypes() => (super.noSuchMethod(
        Invocation.method(
          #getFundTypes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<List<String>> getFundCompanies() => (super.noSuchMethod(
        Invocation.method(
          #getFundCompanies,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<bool> refreshRankingCache({
    _i2.RankingType? rankingType,
    _i2.RankingPeriod? period,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshRankingCache,
          [],
          {
            #rankingType: rankingType,
            #period: period,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> clearRankingCache() => (super.noSuchMethod(
        Invocation.method(
          #clearRankingCache,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getRankingUpdateTime({
    _i2.RankingType? rankingType,
    _i2.RankingPeriod? period,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRankingUpdateTime,
          [],
          {
            #rankingType: rankingType,
            #period: period,
          },
        ),
        returnValue: _i5.Future<DateTime?>.value(),
      ) as _i5.Future<DateTime?>);

  @override
  _i5.Future<List<_i6.Fund>> getFilteredFunds(
          _i8.FundFilterCriteria? criteria) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredFunds,
          [criteria],
        ),
        returnValue: _i5.Future<List<_i6.Fund>>.value(<_i6.Fund>[]),
      ) as _i5.Future<List<_i6.Fund>>);

  @override
  _i5.Future<int> getFilteredFundsCount(_i8.FundFilterCriteria? criteria) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredFundsCount,
          [criteria],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<String>> getFilterOptions(_i8.FilterType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilterOptions,
          [type],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i6.Fund>> searchFunds(_i9.FundSearchCriteria? criteria) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFunds,
          [criteria],
        ),
        returnValue: _i5.Future<List<_i6.Fund>>.value(<_i6.Fund>[]),
      ) as _i5.Future<List<_i6.Fund>>);

  @override
  _i5.Future<List<String>> getSearchSuggestions(
    String? keyword, {
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchSuggestions,
          [keyword],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<List<String>> getSearchHistory({int? limit = 50}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchHistory,
          [],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<bool> saveSearchHistory(String? keyword) => (super.noSuchMethod(
        Invocation.method(
          #saveSearchHistory,
          [keyword],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> deleteSearchHistory(String? keyword) => (super.noSuchMethod(
        Invocation.method(
          #deleteSearchHistory,
          [keyword],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> clearSearchHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearSearchHistory,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<String>> getPopularSearches({int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularSearches,
          [],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<void> preloadSearchCache() => (super.noSuchMethod(
        Invocation.method(
          #preloadSearchCache,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearSearchCache() => (super.noSuchMethod(
        Invocation.method(
          #clearSearchCache,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getSearchStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getSearchStatistics,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}
