// Mocks generated by Mockito 5.4.4 from annotations
// in jisu_fund_analyzer/test/unit/features/fund/presentation/pages/watchlist_page_simple_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_bloc/flutter_bloc.dart' as _i6;
import 'package:jisu_fund_analyzer/src/features/portfolio/domain/fund_favorite/src/entities/fund_favorite.dart'
    as _i4;
import 'package:jisu_fund_analyzer/src/features/portfolio/domain/fund_favorite/src/entities/fund_favorite_list.dart'
    as _i5;
import 'package:jisu_fund_analyzer/src/features/portfolio/presentation/cubit/fund_favorite_cubit.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFundFavoriteState_0 extends _i1.SmartFake
    implements _i2.FundFavoriteState {
  _FakeFundFavoriteState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FundFavoriteCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockFundFavoriteCubit extends _i1.Mock implements _i2.FundFavoriteCubit {
  MockFundFavoriteCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FundFavoriteState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFundFavoriteState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.FundFavoriteState);

  @override
  _i3.Stream<_i2.FundFavoriteState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i3.Stream<_i2.FundFavoriteState>.empty(),
      ) as _i3.Stream<_i2.FundFavoriteState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> loadAllFavorites() => (super.noSuchMethod(
        Invocation.method(
          #loadAllFavorites,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> getFavoriteByCode(String? fundCode) => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteByCode,
          [fundCode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> addFavorite(_i4.FundFavorite? favorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [favorite],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateFavorite(_i4.FundFavorite? favorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFavorite,
          [favorite],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeFavorite(String? fundCode) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [fundCode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeMultipleFavorites(List<String>? fundCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMultipleFavorites,
          [fundCodes],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> searchFavorites(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchFavorites,
          [query],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sortFavorites(
    _i4.FundFavoriteSortType? sortType,
    _i4.FundFavoriteSortDirection? direction,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sortFavorites,
          [
            sortType,
            direction,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateMarketData(
    String? fundCode, {
    double? currentNav,
    double? dailyChange,
    double? previousNav,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMarketData,
          [fundCode],
          {
            #currentNav: currentNav,
            #dailyChange: dailyChange,
            #previousNav: previousNav,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> checkIsFavorite(String? fundCode) => (super.noSuchMethod(
        Invocation.method(
          #checkIsFavorite,
          [fundCode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> toggleFavorite(_i4.FundFavorite? favorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleFavorite,
          [favorite],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAllFavorites() => (super.noSuchMethod(
        Invocation.method(
          #clearAllFavorites,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> loadFavoriteLists() => (super.noSuchMethod(
        Invocation.method(
          #loadFavoriteLists,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> createFavoriteList(_i5.FundFavoriteList? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFavoriteList,
          [list],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateFavoriteList(_i5.FundFavoriteList? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFavoriteList,
          [list],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteFavoriteList(String? listId) => (super.noSuchMethod(
        Invocation.method(
          #deleteFavoriteList,
          [listId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void clearMessage() => super.noSuchMethod(
        Invocation.method(
          #clearMessage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void emit(_i2.FundFavoriteState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i6.Change<_i2.FundFavoriteState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
